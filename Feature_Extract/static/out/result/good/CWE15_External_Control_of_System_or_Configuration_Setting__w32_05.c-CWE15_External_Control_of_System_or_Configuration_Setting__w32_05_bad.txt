(72,124,0)
(152,87,0)
(11,54,0)
(60,42,0)
(142,3,0)
(116,86,0)
(78,86,0)
(65,87,0)
(105,76,0)
(147,135,0)
(110,116,0)
(13,86,0)
(153,58,0)
(131,76,0)
(30,43,0)
(84,103,0)
(123,150,0)
(90,42,0)
(71,124,0)
(74,23,0)
(125,87,0)
(122,124,0)
(17,105,0)
(118,87,0)
(66,113,0)
(85,27,0)
(27,159,0)
(163,76,0)
(80,163,0)
(164,68,0)
(124,87,0)
(106,88,0)
(27,87,0)
(165,87,0)
(51,95,0)
(45,118,0)
(73,124,0)
(113,18,0)
(59,96,0)
(160,70,0)
(94,106,0)
(129,86,0)
(59,140,0)
(95,83,0)
(108,101,0)
(105,127,0)
(115,86,0)
(16,93,0)
(159,27,0)
(134,139,0)
(72,76,0)
(127,86,0)
(68,165,0)
(70,160,0)
(165,3,0)
(150,27,0)
(46,54,0)
(111,19,0)
(158,96,0)
(97,140,0)
(56,150,0)
(42,124,0)
(128,2,0)
(64,127,0)
(7,26,0)
(144,18,0)
(2,27,0)
(69,72,0)
(75,87,0)
(124,122,0)
(161,87,0)
(0,127,0)
(70,1,0)
(33,43,0)
(103,75,0)
(95,124,0)
(159,77,0)
(24,122,0)
(98,10,0)
(82,96,0)
(89,1,0)
(23,118,0)
(86,136,0)
(83,26,0)
(36,140,0)
(83,29,0)
(67,116,0)
(141,23,0)
(22,87,0)
(32,2,0)
(31,73,0)
(130,57,0)
(26,83,0)
(71,12,0)
(95,10,0)
(70,162,0)
(28,57,0)
(35,161,0)
(106,127,0)
(39,159,0)
(5,11,0)
(162,70,0)
(41,18,0)
(91,87,0)
(138,103,0)
(140,96,0)
(104,160,0)
(6,44,0)
(1,70,0)
(159,59,0)
(145,96,0)
(92,122,0)
(58,153,0)
(73,116,0)
(106,76,0)
(102,150,0)
(54,87,0)
(3,165,0)
(165,68,0)
(50,86,0)
(133,8,0)
(47,77,0)
(148,87,0)
(37,153,0)
(150,123,0)
(58,87,0)
(143,86,0)
(132,77,0)
(156,101,0)
(95,51,0)
(2,123,0)
(61,162,0)
(109,75,0)
(149,72,0)
(15,135,0)
(151,130,0)
(62,159,0)
(159,76,0)
(79,141,0)
(43,86,0)
(63,59,0)
(53,11,0)
(101,59,0)
(112,71,0)
(38,86,0)
(14,72,0)
(20,141,0)
(25,165,0)
(21,105,0)
(99,73,0)
(101,156,0)
(126,163,0)
(76,72,0)
(121,124,0)
(4,161,0)
(146,100,0)
(48,1,0)
(135,58,0)
(76,87,0)
(123,2,0)
(103,59,0)
(155,96,0)
(52,51,0)
(18,113,0)
(114,122,0)
(71,116,0)
(55,86,0)
(9,28,0)
(83,95,0)
(23,141,0)
(120,81,0)
(107,95,0)
(34,86,0)
(77,159,0)
(103,27,0)
(157,86,0)
(10,95,0)
(154,59,0)
(29,83,0)
(18,124,0)
(49,159,0)
(51,95,1)
(146,119,1)
(122,92,1)
(106,76,1)
(159,39,1)
(138,84,1)
(32,128,1)
(66,51,1)
(60,90,1)
(142,42,1)
(23,74,1)
(163,126,1)
(80,76,1)
(77,132,1)
(17,21,1)
(162,61,1)
(133,123,1)
(124,122,1)
(159,77,1)
(2,27,1)
(95,124,1)
(131,113,1)
(3,142,1)
(59,140,1)
(6,160,1)
(61,1,1)
(106,94,1)
(31,106,1)
(21,111,1)
(37,135,1)
(106,127,1)
(62,85,1)
(42,60,1)
(123,150,1)
(30,33,1)
(98,83,1)
(69,131,1)
(117,130,1)
(117,156,1)
(89,48,1)
(94,105,1)
(71,112,1)
(92,114,1)
(46,11,1)
(85,163,1)
(74,141,1)
(4,160,1)
(76,72,1)
(163,76,1)
(108,137,1)
(59,63,1)
(141,20,1)
(83,29,1)
(114,24,1)
(26,7,1)
(105,76,1)
(70,162,1)
(127,0,1)
(72,149,1)
(165,68,1)
(103,138,1)
(56,102,1)
(107,52,1)
(79,54,1)
(137,59,1)
(2,32,1)
(68,164,1)
(113,18,1)
(105,127,1)
(75,109,1)
(112,73,1)
(102,2,1)
(39,77,1)
(160,70,1)
(18,124,1)
(90,124,1)
(53,5,1)
(160,104,1)
(99,31,1)
(123,2,1)
(126,80,1)
(101,59,1)
(21,6,1)
(132,47,1)
(40,75,1)
(104,70,1)
(159,59,1)
(18,144,1)
(71,124,1)
(108,146,1)
(121,161,1)
(154,140,1)
(120,51,1)
(95,10,1)
(108,119,1)
(42,124,1)
(83,26,1)
(71,116,1)
(25,3,1)
(110,43,1)
(72,124,1)
(52,58,1)
(101,108,1)
(67,110,1)
(97,36,1)
(84,123,1)
(11,53,1)
(33,137,1)
(21,134,1)
(9,156,1)
(47,49,1)
(105,17,1)
(109,103,1)
(15,118,1)
(140,97,1)
(149,14,1)
(43,30,1)
(150,27,1)
(156,101,1)
(7,107,1)
(21,16,1)
(119,71,1)
(45,23,1)
(164,25,1)
(153,37,1)
(48,40,1)
(54,46,1)
(159,76,1)
(70,1,1)
(128,27,1)
(24,121,1)
(14,69,1)
(27,159,1)
(49,62,1)
(134,163,1)
(116,67,1)
(21,133,1)
(151,28,1)
(28,9,1)
(144,41,1)
(73,124,1)
(64,116,1)
(73,116,1)
(150,56,1)
(21,40,1)
(0,64,1)
(161,35,1)
(63,154,1)
(95,83,1)
(58,153,1)
(48,127,1)
(41,66,1)
(10,98,1)
(111,113,1)
(21,120,1)
(23,141,1)
(5,165,1)
(73,99,1)
(1,89,1)
(31,105,1)
(118,45,1)
(135,147,1)
(130,151,1)
(103,59,1)
(16,42,1)
(35,4,1)
(119,73,1)
(103,27,1)
(165,3,1)
(20,79,1)
(147,15,1)
(31,137,2)
(146,119,2)
(45,42,2)
(105,127,2)
(165,42,2)
(106,127,2)
(121,160,2)
(110,137,2)
(27,159,2)
(53,42,2)
(56,2,2)
(70,40,2)
(114,160,2)
(162,137,2)
(109,123,2)
(18,51,2)
(90,160,2)
(150,2,2)
(64,137,2)
(15,42,2)
(33,137,2)
(151,156,2)
(24,160,2)
(49,163,2)
(123,2,2)
(159,163,2)
(95,42,2)
(30,137,2)
(119,137,2)
(28,156,2)
(37,42,2)
(161,160,2)
(71,73,2)
(127,137,2)
(160,40,2)
(43,137,2)
(25,42,2)
(41,51,2)
(106,105,2)
(83,42,2)
(123,150,2)
(47,163,2)
(133,123,2)
(105,137,2)
(150,27,2)
(70,137,2)
(95,124,2)
(14,113,2)
(17,137,2)
(159,77,2)
(9,156,2)
(70,1,2)
(89,40,2)
(67,137,2)
(2,27,2)
(0,137,2)
(75,123,2)
(69,113,2)
(2,163,2)
(66,51,2)
(58,42,2)
(7,42,2)
(113,51,2)
(16,42,2)
(21,137,2)
(132,163,2)
(59,140,2)
(51,95,2)
(159,76,2)
(141,42,2)
(73,116,2)
(58,153,2)
(159,59,2)
(103,123,2)
(142,42,2)
(1,40,2)
(85,163,2)
(126,113,2)
(163,76,2)
(104,40,2)
(124,160,2)
(11,42,2)
(5,42,2)
(101,59,2)
(6,160,2)
(134,163,2)
(92,160,2)
(124,122,2)
(89,137,2)
(118,42,2)
(105,76,2)
(107,42,2)
(48,40,2)
(61,40,2)
(71,124,2)
(52,42,2)
(135,42,2)
(162,40,2)
(80,113,2)
(103,59,2)
(26,42,2)
(111,113,2)
(18,124,2)
(153,42,2)
(130,156,2)
(163,113,2)
(68,42,2)
(160,137,2)
(72,124,2)
(113,18,2)
(39,163,2)
(46,42,2)
(77,163,2)
(1,137,2)
(48,137,2)
(76,113,2)
(165,68,2)
(73,124,2)
(116,137,2)
(147,42,2)
(112,73,2)
(164,42,2)
(99,137,2)
(106,76,2)
(83,29,2)
(102,2,2)
(120,51,2)
(61,137,2)
(160,70,2)
(74,42,2)
(3,42,2)
(84,123,2)
(104,137,2)
(72,113,2)
(20,42,2)
(83,26,2)
(32,163,2)
(138,123,2)
(42,160,2)
(94,105,2)
(40,123,2)
(35,160,2)
(79,42,2)
(60,160,2)
(54,42,2)
(23,141,2)
(144,51,2)
(23,42,2)
(156,101,2)
(51,42,2)
(42,124,2)
(95,10,2)
(165,3,2)
(98,42,2)
(95,83,2)
(103,27,2)
(4,160,2)
(62,163,2)
(73,137,2)
(27,163,2)
(122,160,2)
(70,162,2)
(76,72,2)
(131,113,2)
(71,116,2)
(128,163,2)
(149,113,2)
(10,42,2)
(123,163,2)
-----------------------------------
(0,INVALID_SOCKET)
(1,MAKEWORD(2,2)
(2,recvResult == SOCKET_ERROR)
(3,&service)
(4,wsaDataInit)
(5,service)
(6,break;)
(7,service)
(8,)
(9,"Failure setting computer name")
(10,sizeof(service)
(11,service.sin_family)
(12,)
(13,if (acceptSocket != INVALID_SOCKET)
(14,NULL)
(15,service)
(16,break;)
(17,INVALID_SOCKET)
(18,listen(listenSocket, LISTEN_BACKLOG)
(19,)
(20,sin_addr)
(21,acceptSocket)
(22,if (WSAStartup(MAKEWORD(2,2)
(23,service.sin_addr.s_addr)
(24,PF_INET)
(25,0)
(26,&service)
(27,recvResult = recv(acceptSocket, data, 100 - 1, 0)
(28,printLine("Failure setting computer name")
(29,struct sockaddr*)
(30,FALSE)
(31,listenSocket)
(32,SOCKET_ERROR)
(33,wsaDataInit)
(34,if (wsaDataInit)
(35,1)
(36,dataBuffer)
(37,LISTEN_PORT)
(38,acceptSocket)
(39,0)
(40,0)
(41,listenSocket)
(42,listenSocket == INVALID_SOCKET)
(43,wsaDataInit = FALSE)
(44,)
(45,INADDR_ANY)
(46,AF_INET)
(47,100)
(48,2)
(49,data)
(50,do)
(51,SOCKET_ERROR == bind(listenSocket, (struct sockaddr*)
(52,SOCKET_ERROR)
(53,sin_family)
(54,service.sin_family = AF_INET)
(55,listenSocket)
(56,0)
(57,)
(58,service.sin_port = htons(LISTEN_PORT)
(59,data = dataBuffer)
(60,INVALID_SOCKET)
(61,wsaData)
(62,acceptSocket)
(63,dataBuffer)
(64,acceptSocket)
(65,if (SOCKET_ERROR == listen(listenSocket, LISTEN_BACKLOG)
(66,SOCKET_ERROR)
(67,INVALID_SOCKET)
(68,sizeof(service)
(69,listenSocket)
(70,WSAStartup(MAKEWORD(2,2)
(71,closesocket(listenSocket)
(72,accept(listenSocket, NULL, NULL)
(73,listenSocket != INVALID_SOCKET)
(74,s_addr)
(75,data[recvResult] = \'\\0\')
(76,acceptSocket = accept(listenSocket, NULL, NULL)
(77,100 - 1)
(78,wsaDataInit)
(79,service)
(80,acceptSocket)
(81,)
(82,data)
(83,(struct sockaddr*)
(84,data)
(85,recvResult)
(86,)
(87,)
(88,)
(89,2)
(90,listenSocket)
(91,if (SOCKET_ERROR == bind(listenSocket, (struct sockaddr*)
(92,0)
(93,)
(94,acceptSocket)
(95,bind(listenSocket, (struct sockaddr*)
(96,)
(97,"")
(98,service)
(99,INVALID_SOCKET)
(100,)
(101,SetComputerNameA(data)
(102,recvResult)
(103,data[recvResult])
(104,NO_ERROR)
(105,acceptSocket != INVALID_SOCKET)
(106,closesocket(acceptSocket)
(107,listenSocket)
(108,data)
(109,\'\\0\')
(110,listenSocket)
(111,break;)
(112,listenSocket)
(113,SOCKET_ERROR == listen(listenSocket, LISTEN_BACKLOG)
(114,SOCK_STREAM)
(115,service)
(116,listenSocket = INVALID_SOCKET)
(117,RET)
(118,service.sin_addr.s_addr = INADDR_ANY)
(119,wsaDataInit)
(120,break;)
(121,listenSocket)
(122,socket(PF_INET, SOCK_STREAM, 0)
(123,recvResult == SOCKET_ERROR || recvResult == 0)
(124,listenSocket = socket(PF_INET, SOCK_STREAM, 0)
(125,if (acceptSocket == INVALID_SOCKET)
(126,INVALID_SOCKET)
(127,acceptSocket = INVALID_SOCKET)
(128,recvResult)
(129,if (listenSocket != INVALID_SOCKET)
(130,exit(1)
(131,acceptSocket)
(132,1)
(133,break;)
(134,break;)
(135,service.sin_port)
(136,)
(137,staticTrue)
(138,recvResult)
(139,)
(140,dataBuffer[100] = "")
(141,service.sin_addr)
(142,service)
(143,wsaData)
(144,LISTEN_BACKLOG)
(145,if (!SetComputerNameA(data)
(146,WSACleanup()
(147,sin_port)
(148,if (listenSocket == INVALID_SOCKET)
(149,NULL)
(150,recvResult == 0)
(151,1)
(152,if (recvResult == SOCKET_ERROR || recvResult == 0)
(153,htons(LISTEN_PORT)
(154,data)
(155,dataBuffer)
(156,!SetComputerNameA(data)
(157,recvResult)
(158,if(staticTrue)
(159,recv(acceptSocket, data, 100 - 1, 0)
(160,WSAStartup(MAKEWORD(2,2)
(161,wsaDataInit = 1)
(162,&wsaData)
(163,acceptSocket == INVALID_SOCKET)
(164,service)
(165,memset(&service, 0, sizeof(service)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
0